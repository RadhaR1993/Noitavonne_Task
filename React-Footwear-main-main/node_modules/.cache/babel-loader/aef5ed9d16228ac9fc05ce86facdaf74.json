{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    storeAddToCart: (state, action) => {\n      // state.value += action.payload;\n      const productId = action.payload;\n      const product = state.find(item => item.id === productId.id);\n\n      if (product) {\n        product.quantity += 1;\n      } else {\n        state.push(action.payload);\n      } // localStorage.setItem(\"cartproducts\", JSON.stringify(state));\n\n    },\n    storeRemoveProduct: (state, action) => {\n      // for (var i = 0; i < state.length; i++) {\n      //     var product = state[i];\n      //     if (product.id === action.payload) {\n      //         state.splice(i, 1);\n      //     }\n      // }\n      // //Call API\n      // localStorage.setItem(\"cartproducts\", JSON.stringify(state));\n      return state.filter(item => item.id !== action.payload);\n    },\n    incrementQuantity: (state, action) => {\n      const productId = action.payload;\n      const product = state.find(item => item.id === productId);\n\n      if (product) {\n        product.quantity += 1;\n      }\n    },\n    decrementQuantity: (state, action) => {\n      const productId = action.payload;\n      const product = state.find(item => item.id === productId);\n\n      if (product && product.quantity > 1) {\n        product.quantity -= 1;\n      }\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  storeAddToCart,\n  storeRemoveProduct,\n  incrementQuantity,\n  decrementQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartSlice","name","reducers","storeAddToCart","state","action","productId","payload","product","find","item","id","quantity","push","storeRemoveProduct","filter","incrementQuantity","decrementQuantity","actions","reducer"],"sources":["D:/Noitavonne Task/React-Footwear-main/React-Footwear-main/src/state/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = [];\r\n\r\nexport const cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        storeAddToCart: (state, action) => {\r\n            // state.value += action.payload;\r\n            const productId = action.payload;\r\n            const product = state.find(item => item.id === productId.id);\r\n            if (product) {\r\n                product.quantity += 1;\r\n            } else {\r\n                state.push(action.payload)\r\n            }\r\n\r\n            // localStorage.setItem(\"cartproducts\", JSON.stringify(state));\r\n        },\r\n        storeRemoveProduct: (state, action) => {\r\n            // for (var i = 0; i < state.length; i++) {\r\n            //     var product = state[i];\r\n            //     if (product.id === action.payload) {\r\n            //         state.splice(i, 1);\r\n            //     }\r\n            // }\r\n            // //Call API\r\n            // localStorage.setItem(\"cartproducts\", JSON.stringify(state));\r\n            return state.filter((item) => item.id !== action.payload)\r\n\r\n        },\r\n        incrementQuantity: (state, action) => {\r\n            const productId = action.payload;\r\n            const product = state.find(item => item.id === productId);\r\n            if (product) {\r\n                product.quantity += 1;\r\n            }\r\n        },\r\n        decrementQuantity: (state, action) => {\r\n            const productId = action.payload;\r\n            const product = state.find(item => item.id === productId);\r\n            if (product && product.quantity > 1) {\r\n                product.quantity -= 1;\r\n            }\r\n        }\r\n\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { storeAddToCart, storeRemoveProduct, incrementQuantity, decrementQuantity } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAD2B;EAEjCF,YAFiC;EAGjCG,QAAQ,EAAE;IACNC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/B;MACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAzB;MACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,SAAS,CAACK,EAAzC,CAAhB;;MACA,IAAIH,OAAJ,EAAa;QACTA,OAAO,CAACI,QAAR,IAAoB,CAApB;MACH,CAFD,MAEO;QACHR,KAAK,CAACS,IAAN,CAAWR,MAAM,CAACE,OAAlB;MACH,CAR8B,CAU/B;;IACH,CAZK;IAaNO,kBAAkB,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MACnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAOD,KAAK,CAACW,MAAN,CAAcL,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAA1C,CAAP;IAEH,CAxBK;IAyBNS,iBAAiB,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAClC,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAzB;MACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,SAA/B,CAAhB;;MACA,IAAIE,OAAJ,EAAa;QACTA,OAAO,CAACI,QAAR,IAAoB,CAApB;MACH;IACJ,CA/BK;IAgCNK,iBAAiB,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;MAClC,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAzB;MACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,SAA/B,CAAhB;;MACA,IAAIE,OAAO,IAAIA,OAAO,CAACI,QAAR,GAAmB,CAAlC,EAAqC;QACjCJ,OAAO,CAACI,QAAR,IAAoB,CAApB;MACH;IACJ;EAtCK;AAHuB,CAAD,CAA7B,C,CA8CP;;AACA,OAAO,MAAM;EAAET,cAAF;EAAkBW,kBAAlB;EAAsCE,iBAAtC;EAAyDC;AAAzD,IAA+EjB,SAAS,CAACkB,OAA/F;AAEP,eAAelB,SAAS,CAACmB,OAAzB"},"metadata":{},"sourceType":"module"}