{"ast":null,"code":"var _jsxFileName = \"D:\\\\Noitavonne Task\\\\React-Footwear-main\\\\React-Footwear-main\\\\src\\\\Components\\\\RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginForm, setIsLoginForm] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  let navigate = useNavigate();\n\n  const handleToggleForm = () => {\n    setIsLoginForm(!isLoginForm);\n    setErrorMessage('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Simple validation\n\n    if (!username.trim() || !email.trim() || !password.trim()) {\n      setErrorMessage('Please fill out all fields.');\n      return;\n    } // Email validation\n\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!emailRegex.test(email.trim())) {\n      setErrorMessage('Please enter a valid email address.');\n      return;\n    }\n\n    try {\n      // Send POST request to your server endpoint with user registration data\n      const response = await axios.post(\"http://localhost:3000/users\", {\n        username: username.trim(),\n        email: email.trim(),\n        password: password.trim()\n      }); // Handle successful registration\n\n      console.log(\"Registration successful:\", response.data); // Optionally, you can redirect the user to another page after successful registration\n\n      navigate(\"/success\"); // Redirect to success page\n    } catch (error) {\n      // Handle registration error\n      console.error(\"Registration failed:\", error);\n      setErrorMessage(\"Registration failed. Please try again later.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"uI18BHKP0Zngk+JsDIlfcXxgmK0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["axios","React","useState","useNavigate","RegistrationForm","username","setUsername","email","setEmail","password","setPassword","isLoginForm","setIsLoginForm","errorMessage","setErrorMessage","navigate","handleToggleForm","handleSubmit","event","preventDefault","trim","emailRegex","test","response","post","console","log","data","error"],"sources":["D:/Noitavonne Task/React-Footwear-main/React-Footwear-main/src/Components/RegistrationForm.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegistrationForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoginForm, setIsLoginForm] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  let navigate = useNavigate();\r\n\r\n  const handleToggleForm = () => {\r\n    setIsLoginForm(!isLoginForm);\r\n    setErrorMessage('');\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Simple validation\r\n    if (!username.trim() || !email.trim() || !password.trim()) {\r\n      setErrorMessage('Please fill out all fields.');\r\n      return;\r\n    }\r\n\r\n    // Email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      setErrorMessage('Please enter a valid email address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send POST request to your server endpoint with user registration data\r\n      const response = await axios.post(\"http://localhost:3000/users\", {\r\n        username: username.trim(),\r\n        email: email.trim(),\r\n        password: password.trim()\r\n      });\r\n\r\n      // Handle successful registration\r\n      console.log(\"Registration successful:\", response.data);\r\n      // Optionally, you can redirect the user to another page after successful registration\r\n      navigate(\"/success\"); // Redirect to success page\r\n    } catch (error) {\r\n      // Handle registration error\r\n      console.error(\"Registration failed:\", error);\r\n      setErrorMessage(\"Registration failed. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 row\">\r\n      <div className=\"col-lg-4\"></div>\r\n      <div className=\"col-lg-4\">\r\n        <div className=\"form-container\">\r\n          {/* {isLoginForm ? (\r\n            // Login form\r\n          ) : (\r\n            // Registration form\r\n          )} */}\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-4\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EACA,IAAIa,QAAQ,GAAGZ,WAAW,EAA1B;;EAEA,MAAMa,gBAAgB,GAAG,MAAM;IAC7BJ,cAAc,CAAC,CAACD,WAAF,CAAd;IACAG,eAAe,CAAC,EAAD,CAAf;EACD,CAHD;;EAKA,MAAMG,YAAY,GAAG,MAAOC,KAAP,IAAiB;IACpCA,KAAK,CAACC,cAAN,GADoC,CAGpC;;IACA,IAAI,CAACd,QAAQ,CAACe,IAAT,EAAD,IAAoB,CAACb,KAAK,CAACa,IAAN,EAArB,IAAqC,CAACX,QAAQ,CAACW,IAAT,EAA1C,EAA2D;MACzDN,eAAe,CAAC,6BAAD,CAAf;MACA;IACD,CAPmC,CASpC;;;IACA,MAAMO,UAAU,GAAG,4BAAnB;;IACA,IAAI,CAACA,UAAU,CAACC,IAAX,CAAgBf,KAAK,CAACa,IAAN,EAAhB,CAAL,EAAoC;MAClCN,eAAe,CAAC,qCAAD,CAAf;MACA;IACD;;IAED,IAAI;MACF;MACA,MAAMS,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,6BAAX,EAA0C;QAC/DnB,QAAQ,EAAEA,QAAQ,CAACe,IAAT,EADqD;QAE/Db,KAAK,EAAEA,KAAK,CAACa,IAAN,EAFwD;QAG/DX,QAAQ,EAAEA,QAAQ,CAACW,IAAT;MAHqD,CAA1C,CAAvB,CAFE,CAQF;;MACAK,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCH,QAAQ,CAACI,IAAjD,EATE,CAUF;;MACAZ,QAAQ,CAAC,UAAD,CAAR,CAXE,CAWoB;IACvB,CAZD,CAYE,OAAOa,KAAP,EAAc;MACd;MACAH,OAAO,CAACG,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACAd,eAAe,CAAC,8CAAD,CAAf;IACD;EACF,CAjCD;;EAmCA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAWE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA/DD;;GAAMV,gB;UAMWD,W;;;KANXC,gB;AAiEN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}